import Head from 'next/head'
import { useState } from 'react'
import Link from 'next/link'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import { fetchAllRepositories } from '../../services/repository/index.js';
import { TableBox } from '../presentational/TableBox'
import Searchbox from '../presentational/Searchbox'
import { mapItemsToTable } from '../../utils/mapItemsToTable'

export default function Home () {
  const [keyword, setKeyword] = useState('')
  const [repositories, setRepositories] = useState({
    items: []
  })

  function handleSubmit (target) {
    target.preventDefault()
    /*
    const base_url = 'http://localhost:3000/api'
    
    const path = `repositories`

    const searchParams = new URLSearchParams({ name: keyword });

    const queryString = searchParams.toString();

    const url = `${base_url}/${path}?${queryString}`

    fetch(`${url}`)
    .then(response => response.json())
    .then(data => setRepositories(data))
    .catch(error => console.log(error))
    */
    fetchAllRepositories({ keyword })
      .then(data => setRepositories(data))
      .catch(error => console.log(error))
  }

  function handleChange (event) {
    const { target } = event
    const { value } = target
    setKeyword(value)
  }
  //{repositories ? console.log(repositories): 'loading...'}
  const { items } = repositories;
  //console.log('items.length: ', items.length)
  //{items.length ?? (<TableBox items={tableData} />)}
  const tableData = mapItemsToTable({ items });
  console.log('tableData: ', tableData)
  return (
    <div className={styles.container}>
      <Head>
        <title>Github Repository finder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <Link href="/">Github Repository finder</Link>
        </h1>
        <Searchbox
          title='Repository'
          onSubmit={handleSubmit}
          onChange={handleChange}
          value={keyword}
        />
        {tableData.length && (<TableBox items={tableData} />)}
      </main>

      <footer className={styles.footer}>
      </footer>
    </div>
  )
}
